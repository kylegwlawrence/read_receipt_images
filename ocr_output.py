from PIL import Image, ImageDraw
import pandas as pd

ocr = [([[1723, 627], [1886, 627], [1886, 780], [1723, 780]], 'I6', 0.6926023278564799), ([[734, 849], [1961, 849], [1961, 1092], [734, 1092]], 'WHOLE FOODS', 0.9912944037239646), ([[1066, 1055], [1646, 1055], [1646, 1183], [1066, 1183]], 'MA RKET', 0.9276532370298419), ([[768, 1285], [1420, 1285], [1420, 1364], [768, 1364]], 'Madi son Broadway MBD', 0.9078515581621903), ([[1091, 1349], [1227, 1349], [1227, 1416], [1091, 1416]], '1001', 0.9999945759773254), ([[1247, 1349], [1511, 1349], [1511, 1416], [1247, 1416]], 'Broadway', 0.7763214223013613), ([[1023, 1399], [1295, 1399], [1295, 1484], [1023, 1484]], 'Seattle,', 0.8221792681226774), ([[1310, 1393], [1582, 1393], [1582, 1470], [1310, 1470]], 'WA 98122', 0.7418562842124219), ([[635, 1444], [1174, 1444], [1174, 1534], [635, 1534]], 'OG LOOSE CARROTS', 0.7820302202819801), ([[1880, 1493], [1921, 1493], [1921, 1549], [1880, 1549]], 'F', 0.9987497663588307), ([[899, 1519], [975, 1519], [975, 1580], [899, 1580]], '1b', 0.5417117866716964), ([[1160, 1535], [1192, 1535], [1192, 1577], [1160, 1577]], '@@', 0.3166696462315215), ([[1276, 1518], [1455, 1518], [1455, 1590], [1276, 1590]], '$1.49', 0.9606942559631663), ([[1475, 1522], [1580, 1522], [1580, 1583], [1475, 1583]], '/b', 0.7436681849292875), ([[710, 1585], [842, 1585], [842, 1646], [710, 1646]], 'Tare', 0.9869464273986311), ([[860, 1575], [1070, 1575], [1070, 1653], [860, 1653]], 'Wei ght', 0.7396219402780277), ([[1091, 1585], [1328, 1585], [1328, 1649], [1091, 1649]], '0.02 Ib', 0.6065058529659472), ([[635, 1628], [1330, 1628], [1330, 1718], [635, 1718]], 'CLTRPOP WLD BRRS SOA', 0.7744172406375213), ([[1691, 1619], [1873, 1619], [1873, 1700], [1691, 1700]], '$2.39', 0.5980885346959502), ([[1887, 1609], [1968, 1609], [1968, 1747], [1887, 1747]], 'FT', 0.8685289073744793), ([[632, 1694], [1334, 1694], [1334, 1784], [632, 1784]], 'CLTRPOP _ GNGR LMN SODA', 0.6407847491676129), ([[1695, 1682], [1877, 1682], [1877, 1757], [1695, 1757]], '$2.39', 0.6508231450042852), ([[636, 1757], [939, 1757], [939, 1845], [636, 1845]], 'TEATR OIL', 0.9568020504671128), ([[958, 1765], [1069, 1765], [1069, 1832], [958, 1832]], 'TEA', 0.9992836984152771), ([[1091, 1765], [1236, 1765], [1236, 1832], [1091, 1832]], 'TREE', 0.9999274611473083), ([[1695, 1742], [1880, 1742], [1880, 1817], [1695, 1817]], '87.29', 0.38814759153439055), ([[1896, 1735], [1937, 1735], [1937, 1852], [1896, 1852]], 'T', 0.6563829537697963), ([[635, 1824], [819, 1824], [819, 1908], [635, 1908]], 'SYRAH', 0.9928380691211192), ([[1665, 1797], [1881, 1797], [1881, 1884], [1665, 1884]], '$26. 99', 0.345515826931112), ([[954, 1886], [1231, 1886], [1231, 1961], [954, 1961]], 'Subtotal', 0.9997410780243349), ([[1669, 1865], [1886, 1865], [1886, 1943], [1669, 1943]], '840.42', 0.8929394892029129), ([[955, 1951], [1069, 1951], [1069, 2017], [955, 2017]], 'Net', 0.9999848584019675), ([[1088, 1951], [1293, 1951], [1293, 2017], [1088, 2017]], 'Sales:', 0.6911776967247695), ([[1671, 1923], [1887, 1923], [1887, 2007], [1671, 2007]], '$40 . 42', 0.3565171769653759), ([[955, 2015], [1101, 2015], [1101, 2090], [955, 2090]], 'Tax:', 0.9995455145835876), ([[1386, 2000], [1596, 2000], [1596, 2075], [1386, 2075]], '10.25%', 0.4279155570005055), ([[1704, 1991], [1892, 1991], [1892, 2069], [1704, 2069]], '84,00', 0.5404590446767653), ([[1086, 2078], [1297, 2078], [1297, 2154], [1086, 2154]], 'Total:', 0.6559059985934721), ([[1672, 2053], [1900, 2053], [1900, 2139], [1672, 2139]], '844.42', 0.9373331312627403), ([[1084, 2137], [1464, 2137], [1464, 2217], [1084, 2217]], 'Soid Items:', 0.8505821381348388), ([[1851, 2125], [1900, 2125], [1900, 2186], [1851, 2186]], '5', 0.9999988079074598), ([[948, 2208], [1130, 2208], [1130, 2280], [948, 2280]], 'Paid:', 0.9999236568505492), ([[948, 2274], [1102, 2274], [1102, 2349], [948, 2349]], 'VISA', 0.9977014660835266), ([[1417, 2254], [1609, 2254], [1609, 2340], [1417, 2340]], '*2686', 0.9879894824175459), ([[1685, 2249], [1908, 2249], [1908, 2330], [1685, 2330]], '844.42', 0.7478151038946227), ([[1015, 2319], [1737, 2319], [1737, 2417], [1015, 2417]], 'Chip Card:VISA CREDIT', 0.989086163058792), ([[1011, 2371], [1991, 2371], [1991, 2488], [1011, 2488]], 'Chip Card AID: A000O0O0031010', 0.3202481727779395), ([[678, 2533], [965, 2533], [965, 2617], [678, 2617]], 'RETURNS:', 0.9997686870134789), ([[990, 2533], [1094, 2533], [1094, 2600], [990, 2600]], 'A]I', 0.13422942782424785), ([[1122, 2519], [1648, 2519], [1648, 2606], [1122, 2606]], 'returns require', 0.7274016589785881), ([[1669, 2532], [1710, 2532], [1710, 2582], [1669, 2582]], 'a', 0.994379928798228), ([[1727, 2509], [1984, 2509], [1984, 2587], [1727, 2587]], 'receipt', 0.9995463792035004), ([[756, 2599], [1109, 2599], [1109, 2674], [756, 2674]], 'No returns', 0.9572206917185868), ([[1130, 2610], [1210, 2610], [1210, 2665], [1130, 2665]], 'on', 0.9849771481109373), ([[1236, 2596], [1414, 2596], [1414, 2664], [1236, 2664]], 'items', 0.9991689315387138), ([[1422, 2571], [1948, 2571], [1948, 2667], [1422, 2667]], 'purchased after', 0.9346033168214685), ([[758, 2658], [1030, 2658], [1030, 2745], [758, 2745]], '90 days.', 0.9988848318022175), ([[1056, 2633], [1951, 2633], [1951, 2735], [1056, 2735]], 'For addi tional  information', 0.42732709729406615), ([[864, 2704], [1826, 2704], [1826, 2802], [864, 2802]], 'pTease visit Wfm. com/returns_', 0.2971849305659941), ([[871, 2770], [1879, 2770], [1879, 2857], [871, 2857]], 'Xxxrrkkrkkrxrxkxxxxxxxkrxxxkx', 0.01697864342936905), ([[813, 2910], [1226, 2910], [1226, 2988], [813, 2988]], 'Earn 5% back', 0.6528055898749742), ([[1242, 2911], [1321, 2911], [1321, 2975], [1242, 2975]], 'at', 0.9999974711900259), ([[1338, 2880], [1954, 2880], [1954, 2971], [1338, 2971]], 'Whole Foods Market', 0.9661408017539854), ([[1111, 2960], [1626, 2960], [1626, 3046], [1111, 3046]], 'with Prime Visa', 0.9127401911099553), ([[861, 3034], [972, 3034], [972, 3095], [861, 3095]], 'arid', 0.6525781154632568), ([[988, 3048], [1065, 3048], [1065, 3100], [988, 3100]], 'an', 0.9999876088490234), ([[1071, 3005], [1921, 3005], [1921, 3117], [1071, 3117]], 'eligible Prime membership', 0.8650580811591724), ([[858, 3092], [1297, 3092], [1297, 3168], [858, 3168]], 'Learn more at', 0.9909860306131345), ([[1317, 3073], [1921, 3073], [1921, 3152], [1317, 3152]], 'amazori . COM/wfmvisa', 0.48131177125693014), ([[900, 3197], [1849, 3197], [1849, 3273], [900, 3273]], 'xr*x*rrxxxxxkxkkrxxxrK*rtx*x*', 0.00128294892764146), ([[837, 3246], [1919, 3246], [1919, 3336], [837, 3336]], 'HOW WAS YOUR SHOPPING EXPERIENCE?', 0.9304054807164704), ([[846, 3328], [923, 3328], [923, 3383], [846, 3383]], 'Go', 0.8274079352175693), ([[944, 3335], [1040, 3335], [1040, 3387], [944, 3387]], 'to:', 0.9998205052141739), ([[1067, 3326], [1240, 3326], [1240, 3389], [1067, 3389]], 'http:', 0.9983856649339978), ([[1265, 3328], [1405, 3328], [1405, 3380], [1265, 3380]], '{www', 0.2472408562898636), ([[1420, 3307], [1952, 3307], [1952, 3379], [1420, 3379]], 'wfm. Comv/ feedback', 0.39428487339287704), ([[721, 3380], [897, 3380], [897, 3446], [721, 3446]], 'ENTER', 0.9999440755116866), ([[912, 3385], [1024, 3385], [1024, 3437], [912, 3437]], 'FOR', 0.9997450746446326), ([[1046, 3384], [1079, 3384], [1079, 3429], [1046, 3429]], 'A', 0.9387293739979761), ([[1104, 3379], [1311, 3379], [1311, 3434], [1104, 3434]], 'CHANCE', 0.9998099513503352), ([[1333, 3371], [1406, 3371], [1406, 3432], [1333, 3432]], 'T0', 0.44755685863828076), ([[1425, 3371], [1535, 3371], [1535, 3432], [1425, 3432]], 'WIN', 0.9971478655451932), ([[1553, 3358], [1918, 3358], [1918, 3434], [1553, 3434]], 'A $250 GIFT', 0.8905846368802651), ([[973, 3594], [1045, 3594], [1045, 3638], [973, 3638]], 'X*', 0.14129889664495676), ([[1065, 3569], [1530, 3569], [1530, 3647], [1065, 3647]], 'BATHROOM CODE :', 0.49728027908564), ([[1553, 3566], [1735, 3566], [1735, 3641], [1553, 3641]], '01524', 0.9974621683269129), ([[1751, 3581], [1823, 3581], [1823, 3625], [1751, 3625]], 'XX', 0.10281155943636394), ([[897, 3631], [1865, 3631], [1865, 3724], [897, 3724]], '952 97202 12/01/2023 04:53 PM', 0.5779247455824162), ([[1431.274028537339, 1287.9206542209442], [1819.7069484064118, 1250.8545522003772], [1822.725971462661, 1321.0793457790558], [1434.2930515935882, 1358.1454477996228]], '206-502-3720', 0.7392537316534189), ([[1685.2270311712882, 1508.1989371536683], [1866.2236883189648, 1494.5622206192877], [1866.7729688287118, 1567.8010628463317], [1685.7763116810352, 1580.4377793807123]], '$1,36', 0.6939443757155717), ([[701.3005628453517, 1517.1825890886175], [838.8896597015578, 1507.933971323671], [839.6994371546483, 1578.8174109113825], [703.1103402984422, 1588.066028676329]], '0.91', 0.9996726045893953), ([[1940.9563638994289, 3358.0683656356596], [2088.6151423623414, 3378.548550061438], [2075.043636100571, 3449.9316343643404], [1927.3848576376588, 3430.451449938562]], 'CARD', 0.6699302203168105)]

def parse_ocr_data(ocr_result:list, save_file_name:str):
    text = []
    confidence = []
    coordinates = []
    words = {'text':text, 'confidence':confidence, 'coordinates':coordinates}
    how_many_extractions = len(ocr_result)
    for i in ocr_result[0:how_many_extractions+1]:
        ocr_text = i[1]
        ocr_confidence = i[2]
        ocr_coordinates = (i[0][0][0], i[0][0][1], i[0][2][0], i[0][2][1])
        if ocr_text == '' or ocr_text==None:
            print('Text is null')
        if ocr_confidence == '' or ocr_confidence==None:
            print('confidence is null')
        words['text'].append(ocr_text)
        words['confidence'].append(ocr_confidence)
        words['coordinates'].append(ocr_coordinates)

    df = pd.DataFrame.from_dict(words)
    df.reset_index(inplace=True)

    img_name = '.processed_images/from_heic_IMG_4519.jpg'
    img = Image.open(img_name)
    draw = ImageDraw.Draw(img)

    for index, row in df.iterrows():
        coords = row['coordinates']
        draw.rectangle(coords, outline=(255, 0, 0)) # first and third elements of coordinates in tuple of ocr data

    img.save(save_file_name)

if __name__=='__main__':
    save_file_name = '.processed_images/from_heic_IMG_4519_v2.jpg'
    parse_ocr_data(ocr, save_file_name)